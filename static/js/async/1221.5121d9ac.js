"use strict";(self.webpackChunk_winner_fed_cloud_utils=self.webpackChunk_winner_fed_cloud_utils||[]).push([["1221"],{5210:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var s=r(2676),d=r(453);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",strong:"strong",code:"code",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",pre:"pre"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"function-merge",children:["Function: merge",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-merge",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"merge"}),"<",(0,s.jsx)(n.code,{children:"T"}),">(",(0,s.jsx)(n.code,{children:"...objs"}),"): ",(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"T"}),"[]>"]}),"\n",(0,s.jsx)(n.p,{children:"深度合并多个对象"}),"\n",(0,s.jsxs)(n.h4,{id:"type-parameters",children:["Type parameters",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-parameters",children:"#"})]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{align:"left",children:"Name"}),"\n",(0,s.jsx)(n.th,{align:"left",children:"Description"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"left",children:(0,s.jsx)(n.code,{children:"T"})}),"\n",(0,s.jsx)(n.td,{align:"left",children:"对象值的类型"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"parameters",children:["Parameters",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters",children:"#"})]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{align:"left",children:"Name"}),"\n",(0,s.jsx)(n.th,{align:"left",children:"Type"}),"\n",(0,s.jsx)(n.th,{align:"left",children:"Description"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"left",children:(0,s.jsx)(n.code,{children:"...objs"})}),"\n",(0,s.jsxs)(n.td,{align:"left",children:[(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"T"}),">[]"]}),"\n",(0,s.jsx)(n.td,{align:"left",children:"要合并的对象数组"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"returns",children:["Returns",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Record"}),"<",(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"T"}),"[]>"]}),"\n",(0,s.jsx)(n.p,{children:"合并后的新对象"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Description"})})}),"\n",(0,s.jsx)(n.p,{children:"将多个对象的属性深度合并，数组属性会被展开合并，非数组属性会被转换为数组"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Throws"})})}),"\n",(0,s.jsx)(n.p,{children:"当输入参数不是对象时抛出"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"merge(\n  { a: 1, b: [2] },\n  { a: 2, b: [3], c: 'foo' }\n);\n// => { a: [1, 2], b: [2, 3], c: ['foo'] }\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["api%2Ffunctions%2Fmerge.md"]={toc:[{text:"Type parameters",id:"type-parameters",depth:4},{text:"Parameters",id:"parameters",depth:4},{text:"Returns",id:"returns",depth:4}],title:"Function: merge",headingTitle:"Function: merge",frontmatter:{}}}}]);