[{"id":0,"title":"Function: accAdd","content":"#\n\naccAdd(arg1, arg2): number\n\n加法函数，用来得到精确的加法结果 javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\n\nParameters#\n\nNAME   TYPE\narg1   number\narg2   number\n\nReturns#\n\nnumber\n\narg1加上arg2的精确结果\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/accAdd","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":102},{"text":"Returns","id":"returns","depth":4,"charIndex":156}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"Function: accDiv","content":"#\n\naccDiv(arg1, arg2): number\n\n除法函数，用来得到精确的除法结果 javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。\n\nParameters#\n\nNAME   TYPE\narg1   number\narg2   number\n\nReturns#\n\nnumber\n\narg1除以arg2的精确结果\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/accDiv","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":102},{"text":"Returns","id":"returns","depth":4,"charIndex":156}],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"Function: accMod","content":"#\n\naccMod(arg1, arg2): number\n\n数字取余防止精度丢失\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\narg1   number   数字1\narg2   number   数字2\n\nReturns#\n\nnumber\n\n两数字相除取余\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/accMod","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":124}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"Function: accMul","content":"#\n\naccMul(arg1, arg2): number\n\n乘法函数，用来得到精确的乘法结果 javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\n\nParameters#\n\nNAME   TYPE\narg1   number\narg2   number\n\nReturns#\n\nnumber\n\narg1乘以arg2的精确结果\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/accMul","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":102},{"text":"Returns","id":"returns","depth":4,"charIndex":156}],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"Function: accSub","content":"#\n\naccSub(arg1, arg2): number\n\n减法函数，用来得到精确的减法结果 javascript的减法结果会有误差，在两个浮点数相减的时候会比较明显。这个函数返回较为精确的减法结果。\n\nParameters#\n\nNAME   TYPE\narg1   number\narg2   number\n\nReturns#\n\nnumber\n\narg1减去arg2的精确结果\n\nExample\n\n","routePath":"/cloud-utils/api/functions/accSub","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":102},{"text":"Returns","id":"returns","depth":4,"charIndex":156}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"Function: addChineseUnit","content":"#\n\naddChineseUnit(number, decimalDigit?): string\n\n为数字加上单位：万或亿\n\nParameters#\n\nNAME           TYPE     DEFAULT VALUE   DESCRIPTION\nnumber         number   undefined       输入数字.\ndecimalDigit   number   2               返回的小数点后最多的位数，默认为 2\n\nReturns#\n\nstring\n\n加上单位后的数字（计算结果有时会有精度问题）\n\nSince\n\n1.2.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/addChineseUnit","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":62},{"text":"Returns","id":"returns","depth":4,"charIndex":233}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"Function: addClass","content":"#\n\naddClass(el, cls): void\n\ndom操作，元素添加某个class\n\nParameters#\n\nNAME   TYPE                 DESCRIPTION\nel     null | HTMLElement   HTML元素\ncls    string               css类名\n\nReturns#\n\nvoid\n\nSince\n\n1.1.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/addClass","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":169}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"Function: anagrams","content":"#\n\nanagrams(str): string[]\n\n生成字符串的所有可能排列（包含重复项）\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   输入字符串\n\nReturns#\n\nstring[]\n\n所有可能的排列组合数组\n\nDescription\n\n使用递归算法生成输入字符串的所有可能排列组合\n\nSince\n\n1.2.1\n\nThrows\n\n当输入参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/anagrams","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":112}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"Function: appendStockSuffix","content":"#\n\nappendStockSuffix(stock): string\n\n识别股票代码添加市场后缀\n\nParameters#\n\nNAME    TYPE     DESCRIPTION\nstock   string   股票代码\n\nReturns#\n\nstring\n\n带有市场后缀的股票代码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/appendStockSuffix","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":115}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"Function: bytesToSize","content":"#\n\nbytesToSize(bytes): string\n\n将字节转换成友好格式，如Bytes，KB，MB\n\nParameters#\n\nNAME    TYPE     DESCRIPTION\nbytes   number   字节数\n\nReturns#\n\nstring\n\n格式化后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/bytesToSize","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":119}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"Function: capitalizeEveryWord","content":"#\n\ncapitalizeEveryWord(str): string\n\n大写每个单词的首字母\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   输入字符串\n\nReturns#\n\nstring\n\n每个单词首字母大写的字符串\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/capitalizeEveryWord","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":112}],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"Function: changeMoneyToChinese","content":"#\n\nchangeMoneyToChinese(n): string\n\n数字金额大写转换\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nn      number   输入金额\n\nReturns#\n\nstring\n\n中文大写金额\n\nSince\n\n1.2.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/changeMoneyToChinese","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":108}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"Function: clearCookie","content":"#\n\nclearCookie(domain?, path?): void\n\n清除所有 cookie\n\nParameters#\n\nNAME      TYPE     DEFAULT VALUE   DESCRIPTION\ndomain?   string   undefined       可选域名\npath?     string   '/'             可选路径，默认为'/'\n\nReturns#\n\nvoid\n\nExample\n\n","routePath":"/cloud-utils/api/functions/clearCookie","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":198}],"domain":"","frontmatter":{},"version":""},{"id":13,"title":"Function: combineURLs","content":"#\n\ncombineURLs(baseURL, ...relativeURLs): string\n\nCreates a new URL by combining the specified URLs\n\nParameters#\n\nNAME              TYPE       DESCRIPTION\nbaseURL           string     The base URL\n...relativeURLs   string[]   The relative URL\n\nReturns#\n\nstring\n\nThe combined URL\n\nSince\n\n1.2.5","routePath":"/cloud-utils/api/functions/combineURLs","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":100},{"text":"Returns","id":"returns","depth":4,"charIndex":243}],"domain":"","frontmatter":{},"version":""},{"id":14,"title":"Function: compareVersion","content":"#\n\ncompareVersion(v1, v2): number\n\n版本比较\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nv1     string   老版本\nv2     string   新版本\n\nReturns#\n\nnumber\n\nv1 > v2 => 1, v1 < v2 => -1, v1 === v2 => 0\n\nSince\n\n1.2.5 https://github.com/omichelsen/compare-versions\n\nExample\n\n","routePath":"/cloud-utils/api/functions/compareVersion","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":122}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"Function: dataURLToBlob","content":"#\n\ndataURLToBlob(dataURL): Blob\n\n将dataURL转换为Blob对象\n\nParameters#\n\nNAME      TYPE     DESCRIPTION\ndataURL   string   包含base64编码数据的dataURL字符串\n\nReturns#\n\nBlob\n\n * 返回对应的Blob对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/dataURLToBlob","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":51},{"text":"Returns","id":"returns","depth":4,"charIndex":139}],"domain":"","frontmatter":{},"version":""},{"id":16,"title":"Function: deepClone","content":"#\n\ndeepClone<T>(obj): T\n\n深层克隆对象\n\nType parameters#\n\nNAME\nT\n\nParameters#\n\nNAME   TYPE   DESCRIPTION\nobj    T      要克隆的对象\n\nReturns#\n\nT\n\n * 克隆后的新对象\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/deepClone","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":32},{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":119}],"domain":"","frontmatter":{},"version":""},{"id":17,"title":"Function: deepMapKeys","content":"#\n\ndeepMapKeys<T>(obj, fn): T\n\n深层映射对象键\n\nType parameters#\n\nNAME   TYPE\nT      extends Record<string, any>\n\nParameters#\n\nNAME   TYPE                      DESCRIPTION\nobj    T                         要转换键名的对象\nfn     (key: string) => string   键名转换函数\n\nReturns#\n\nT\n\n * 转换后的新对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/deepMapKeys","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":39},{"text":"Parameters","id":"parameters","depth":4,"charIndex":105},{"text":"Returns","id":"returns","depth":4,"charIndex":246}],"domain":"","frontmatter":{},"version":""},{"id":18,"title":"Function: dig","content":"#\n\ndig(obj, target): any\n\n基于给定的键返回嵌套JSON对象中的目标值\n\nhttps://30secondsofcode.org/object#dig\n\nParameters#\n\nNAME     TYPE                  DESCRIPTION\nobj      Record<string, any>   要搜索的嵌套对象\ntarget   string                要查找的目标键\n\nReturns#\n\nany\n\n找到的值或undefined\n\nExample\n\n","routePath":"/cloud-utils/api/functions/dig","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":88},{"text":"Returns","id":"returns","depth":4,"charIndex":224}],"domain":"","frontmatter":{},"version":""},{"id":19,"title":"Function: dynamicLoadScript","content":"#\n\ndynamicLoadScript(src, callback?): void\n\n动态加载 script\n\nParameters#\n\nNAME        TYPE                                                      DESCRIPTION\nsrc         string                                                    要加载的脚本URL\ncallback?   (err: null | Error, script?: HTMLScriptElement) => void   加载完成后的回调函数\n\nReturns#\n\nvoid\n\nExample\n\n","routePath":"/cloud-utils/api/functions/dynamicLoadScript","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":56},{"text":"Returns","id":"returns","depth":4,"charIndex":313}],"domain":"","frontmatter":{},"version":""},{"id":20,"title":"Function: encrypt","content":"#\n\nencrypt(params): string\n\n加密算法 1.所有入参加入集合M，参数名做key, 值做value\n2.提供的密钥1（字段名appid）与密钥2（字段名secret）两项，以及当前时间戳（字段名time)也加入集合M,\n3.将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序） 4.集合M所有值拼接成字符串，转化成UTF-8编码格式的字节数组,\n最后需要取MD5码（signature摘要值）\n\nParameters#\n\nNAME     TYPE                     DESCRIPTION\nparams   Record<string, string>   要加密的参数对象\n\nReturns#\n\nstring\n\n拼接后的参数字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/encrypt","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":218},{"text":"Returns","id":"returns","depth":4,"charIndex":321}],"domain":"","frontmatter":{},"version":""},{"id":21,"title":"Function: equals","content":"#\n\nequals(a, b): boolean\n\n两个值之间的深入比较，以确定它们是否相等\n\nParameters#\n\nNAME   TYPE   DESCRIPTION\na      any    第一个要比较的值\nb      any    第二个要比较的值\n\nReturns#\n\nboolean\n\n如果值相等则返回true，否则返回false\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/equals","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":47},{"text":"Returns","id":"returns","depth":4,"charIndex":133}],"domain":"","frontmatter":{},"version":""},{"id":22,"title":"Function: exportXls","content":"#\n\nexportXls(data, name?, callBack?): boolean\n\n导出Excel文件\n\nParameters#\n\nNAME        TYPE                             DEFAULT VALUE   DESCRIPTION\ndata        Blob                             undefined       接口返回的blob数据\nname?       string                           'excel'         导出的文件名(不带扩展名)\ncallBack?   (result: ExportResult) => void   undefined       导出结果回调函数\n\nReturns#\n\nboolean\n\n如果数据为空返回false，否则返回true\n\nDescription\n\n将Blob数据导出为Excel文件，支持IE和其他现代浏览器\n\nThrows\n\n当data参数不是Blob类型时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/exportXls","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":57},{"text":"Returns","id":"returns","depth":4,"charIndex":362}],"domain":"","frontmatter":{},"version":""},{"id":23,"title":"Function: extend","content":"#\n\nextend<T, U>(to, from): T & U\n\n将from所有的键值对都添加到to上面去，返回to\n\nType parameters#\n\nNAME   TYPE             DESCRIPTION\nT      extends object   目标对象类型\nU      extends object   源对象类型\n\nParameters#\n\nNAME   TYPE   DESCRIPTION\nto     T      目标对象\nfrom   U      源对象\n\nReturns#\n\nT & U\n\n合并后的对象\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/extend","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":60},{"text":"Parameters","id":"parameters","depth":4,"charIndex":176},{"text":"Returns","id":"returns","depth":4,"charIndex":253}],"domain":"","frontmatter":{},"version":""},{"id":24,"title":"Function: fibonacci","content":"#\n\nfibonacci(num): number[]\n\n斐波那契数组生成器\n创建一个特定长度的空数组，初始化前两个值（0和1）。使用Array.reduce()向数组中添加值，后面的一个数等于前面两个数相加之和（前两个除外）。\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nnum    number   要生成的斐波那契数组长度\n\nReturns#\n\nnumber[]\n\n生成的斐波那契数组\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/fibonacci","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":115},{"text":"Returns","id":"returns","depth":4,"charIndex":186}],"domain":"","frontmatter":{},"version":""},{"id":25,"title":"Function: filterEmptyPropObj","content":"#\n\nfilterEmptyPropObj(obj): Record<string, any> | undefined\n\n过滤对象中为空的属性\n\nParameters#\n\nNAME   TYPE                  DESCRIPTION\nobj    Record<string, any>   需要过滤的对象\n\nReturns#\n\nRecord<string, any> | undefined\n\n过滤后的对象，如果输入不是对象则返回undefined\n\nExample\n\n","routePath":"/cloud-utils/api/functions/filterEmptyPropObj","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":72},{"text":"Returns","id":"returns","depth":4,"charIndex":164}],"domain":"","frontmatter":{},"version":""},{"id":26,"title":"Function: formatBankCard","content":"#\n\nformatBankCard(val): string\n\n格式化银行卡 用户在输入银行卡号时，需要以4位4位的形式显示，就是每隔4位加个空格，方便用户校对输入的银行卡是否正确\n**注：**一般数据库里面存的都是不带格式的原始数据，所以提交的时候记得过滤下空格再提交哦。毕竟格式化这种算是表现层，前端展示的时候处理下就好，业务逻辑什么用到\n的卡号可不是格式化后的呢。 还原val.replace(/\\s/g, '');\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   银行卡号字符串\n\nReturns#\n\nstring\n\n格式化后的银行卡号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatBankCard","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":212},{"text":"Returns","id":"returns","depth":4,"charIndex":278}],"domain":"","frontmatter":{},"version":""},{"id":27,"title":"Function: formatDate","content":"#\n\nformatDate(date?, fmt?): string\n\n将Date对象或时间戳转换为指定格式的字符串\n\nParameters#\n\nNAME    TYPE                     DEFAULT VALUE           DESCRIPTION\ndate?   string | number | Date   undefined               日期对象、时间戳或日期字符串\nfmt?    string                   'yyyy-MM-dd HH:mm:ss'   -\n\nReturns#\n\nstring\n\n格式化后的日期字符串\n\nDescription\n\n支持多种日期格式输出，包括年月日时分秒、季度、星期等\n\nThrows\n\n当日期参数无效时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatDate","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":59},{"text":"Returns","id":"returns","depth":4,"charIndex":273}],"domain":"","frontmatter":{},"version":""},{"id":28,"title":"Function: formatDateToTimeStamp","content":"#\n\nformatDateToTimeStamp(time): number\n\n获取指定时间的Unix时间戳\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\ntime   string   时间字符串，支持格式： - 20160126 12:00:00 - 2016-01-26 12:00:00 -\n                2016.01.26 12:00:00 - 20160126 - 2016-01-26 12:00:00.0\n\nReturns#\n\nnumber\n\nUnix时间戳(毫秒数)\n\nDescription\n\n将各种格式的日期字符串转换为Unix时间戳(毫秒数)\n\nThrows\n\n当输入参数不是字符串时抛出\n\nThrows\n\n当日期格式无效时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatDateToTimeStamp","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":240}],"domain":"","frontmatter":{},"version":""},{"id":29,"title":"Function: formatMoney","content":"#\n\nformatMoney(val, symbol?): string\n\n用符号（默认为逗号）格式化金钱\n\nParameters#\n\nNAME     TYPE     DEFAULT VALUE   DESCRIPTION\nval      string   undefined       金额字符串\nsymbol   string   ','             分隔符号，默认为','\n\nReturns#\n\nstring\n\n格式化后的金额字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatMoney","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":54},{"text":"Returns","id":"returns","depth":4,"charIndex":200}],"domain":"","frontmatter":{},"version":""},{"id":30,"title":"Function: formatNumber","content":"#\n\nformatNumber(number, decimals?, decPoint?, thousandsSep?, roundTag?): string\n\n格式化数字、金额、千分位、保留几位小数、舍入舍去\n\nParameters#\n\nNAME            TYPE                         DEFAULT VALUE   DESCRIPTION\nnumber          string | number              undefined       要格式化的数字或数字字符串\ndecimals?       number                       2               保留几位小数，默认为2，范围0-20\ndecPoint?       string                       '.'             小数点符号，默认为'.'\nthousandsSep?   string                       ','             千分位符号，默认为','\nroundTag?       \"ceil\" | \"floor\" | \"round\"   'ceil'          舍入方式: 'ceil'向上取整, 'floor'向下取整, 'round'四舍五入\n\nReturns#\n\nstring\n\n格式化后的数字字符串\n\nDescription\n\n提供数字格式化功能，支持千分位分隔、小数位控制、舍入方式选择\n\nSince\n\n1.0.7\n\nThrows\n\n当输入参数类型不正确时抛出\n\nThrows\n\n当decimals超出0-20范围时抛出\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatNumber","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":106},{"text":"Returns","id":"returns","depth":4,"charIndex":600}],"domain":"","frontmatter":{},"version":""},{"id":31,"title":"Function: formatPhone","content":"#\n\nformatPhone(phone, symbol?): string\n\n手机号码中间部分替换成指定符号\n\nParameters#\n\nNAME     TYPE     DEFAULT VALUE   DESCRIPTION\nphone    string   undefined       手机号码字符串\nsymbol   string   '****'          替换符号，默认为'****'\n\nReturns#\n\nstring\n\n格式化后的手机号码字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatPhone","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":56},{"text":"Returns","id":"returns","depth":4,"charIndex":207}],"domain":"","frontmatter":{},"version":""},{"id":32,"title":"Function: formatTimeAgo","content":"#\n\nformatTimeAgo(ms): string\n\n将时间转化为几天前,几小时前，几分钟前\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nms     number   时间戳(毫秒)\n\nReturns#\n\nstring\n\n格式化后的时间字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/formatTimeAgo","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":116}],"domain":"","frontmatter":{},"version":""},{"id":33,"title":"Function: generateGUID","content":"#\n\ngenerateGUID(): string\n\n生成GUID\n\nReturns#\n\nstring\n\n生成的GUID字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/generateGUID","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":34}],"domain":"","frontmatter":{},"version":""},{"id":34,"title":"Function: get","content":"#\n\nget(from, ...selectors): any[]\n\n从对象中检索给定选择器指示的一组属性\n\nhttps://30secondsofcode.org/object#get\n\nParameters#\n\nNAME           TYPE                  DESCRIPTION\nfrom           Record<string, any>   源对象\n...selectors   string[]              属性选择器\n\nReturns#\n\nany[]\n\n检索到的属性值数组\n\nExample\n\n","routePath":"/cloud-utils/api/functions/get","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":94},{"text":"Returns","id":"returns","depth":4,"charIndex":241}],"domain":"","frontmatter":{},"version":""},{"id":35,"title":"Function: getBrowser","content":"#\n\ngetBrowser(): Object\n\n获取浏览器的类型和版本号\n\nReturns#\n\nObject\n\n浏览器类型和版本号\n\nNAME      TYPE\ntype      string\nversion   string\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getBrowser","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":38}],"domain":"","frontmatter":{},"version":""},{"id":36,"title":"Function: getCookie","content":"#\n\ngetCookie(name): string | null\n\n获取 cookie\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nname   string   cookie名称\n\nReturns#\n\nstring | null\n\n * cookie值，不存在时返回null\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getCookie","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":112}],"domain":"","frontmatter":{},"version":""},{"id":37,"title":"Function: getDayOfYear","content":"#\n\ngetDayOfYear(time): number\n\n获取某个日期是当年中的第几天\n\nParameters#\n\nNAME   TYPE            DESCRIPTION\ntime   string | Date   日期字符串或Date对象\n\nReturns#\n\nnumber\n\n当年中的第几天\n\nSince\n\n1.2.4\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getDayOfYear","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":131}],"domain":"","frontmatter":{},"version":""},{"id":38,"title":"Function: getDayOfYearWeek","content":"#\n\ngetDayOfYearWeek(time): number\n\n获取某个日期在这一年的第几周\n\nParameters#\n\nNAME   TYPE            DESCRIPTION\ntime   string | Date   日期字符串或Date对象\n\nReturns#\n\nnumber\n\n这一年的第几周\n\nSince\n\n1.2.4\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getDayOfYearWeek","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":135}],"domain":"","frontmatter":{},"version":""},{"id":39,"title":"Function: getDays","content":"#\n\ngetDays(time, len, direction?): string[]\n\n返回指定长度的天数集合 摘自：https://segmentfault.com/a/1190000013041329\n\nParameters#\n\nNAME        TYPE            DEFAULT VALUE   DESCRIPTION\ntime        string | Date   undefined       日期字符串或Date对象\nlen         number          undefined       天数长度\ndirection   1 | 2 | 3       3               方向：1: 前几天; 2: 后几天; 3:前后几天 默认3\n\nReturns#\n\nstring[]\n\n日期字符串数组\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getDays","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":104},{"text":"Returns","id":"returns","depth":4,"charIndex":354}],"domain":"","frontmatter":{},"version":""},{"id":40,"title":"Function: getDevice","content":"#\n\ngetDevice(): DeviceInfo\n\n获取移动设备信息，如是否是iOS，android等\n\nReturns#\n\nDeviceInfo\n\n设备信息对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getDevice","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":54}],"domain":"","frontmatter":{},"version":""},{"id":41,"title":"Function: getDiffDay","content":"#\n\ngetDiffDay(startDay, endDay): number\n\n得到两个时间的时间差（返回天数）\n\nParameters#\n\nNAME       TYPE     DESCRIPTION\nstartDay   number   开始时间戳\nendDay     number   结束时间戳\n\nReturns#\n\nnumber\n\n天数差\n\nSince\n\n1.0.7\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getDiffDay","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":156}],"domain":"","frontmatter":{},"version":""},{"id":42,"title":"Function: getImgBase64","content":"#\n\ngetImgBase64(url): Promise<string>\n\n获取图片的base64 url\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nurl    string   图片url\n\nReturns#\n\nPromise<string>\n\nPromise解析后的图片base64信息\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getImgBase64","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":119}],"domain":"","frontmatter":{},"version":""},{"id":43,"title":"Function: getIn","content":"#\n\ngetIn<T>(p, o): T | null\n\n主动防御 对于我们操作的数据，尤其是由 API\n接口返回的，时常会有一个很复杂的深层嵌套的数据结构。为了代码的健壮性，很多时候需要对每一层访问都作空值判断，就像这样： props.user &&\nprops.user.posts && props.user.posts[0] && props.user.posts[0].comments &&\nprops.user.posts[0].comments[0] 代码看起来相当不美观，因此提供了一个非常简洁明了的原生的方式。\n\nType parameters#\n\nNAME\nT\n\nParameters#\n\nNAME   TYPE                  DESCRIPTION\np      (string | number)[]   属性列表\no      unknown               对象\n\nReturns#\n\nT | null\n\n如果正常访问到，则返回对应的值，否则返回 null。\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getIn","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":266},{"text":"Parameters","id":"parameters","depth":4,"charIndex":292},{"text":"Returns","id":"returns","depth":4,"charIndex":413}],"domain":"","frontmatter":{},"version":""},{"id":44,"title":"Function: getLocationHrefParam","content":"#\n\ngetLocationHrefParam(name): string | null\n\n获取URL中指定参数的值\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nname   string   要获取的参数名称\n\nReturns#\n\nstring | null\n\n * 返回解码后的参数值，如果参数不存在则返回null\n\nDescription\n\n从当前页面的URL中解析出指定参数的值，支持查询参数(?)、哈希参数(#)和锚点参数(&)\n\nThrows\n\n * 当name参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getLocationHrefParam","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":59},{"text":"Returns","id":"returns","depth":4,"charIndex":126}],"domain":"","frontmatter":{},"version":""},{"id":45,"title":"Function: getLocationSearchParam","content":"#\n\ngetLocationSearchParam(name): string | null\n\n从URL查询字符串中获取指定参数的值\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nname   string   要获取的参数名称\n\nReturns#\n\nstring | null\n\n * 返回解码后的参数值，若参数不存在则返回null\n\nDescription\n\n专门处理location.search部分的参数，格式为?key=value&key2=value2\n\nThrows\n\n * 当name参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getLocationSearchParam","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":67},{"text":"Returns","id":"returns","depth":4,"charIndex":134}],"domain":"","frontmatter":{},"version":""},{"id":46,"title":"Function: getMonthOfDay","content":"#\n\ngetMonthOfDay(time): number\n\n获取某月有多少天 摘自：https://segmentfault.com/a/1190000013041329\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\ntime   string   时间字符串\n\nReturns#\n\nnumber\n\n天数\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getMonthOfDay","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":88},{"text":"Returns","id":"returns","depth":4,"charIndex":152}],"domain":"","frontmatter":{},"version":""},{"id":47,"title":"Function: getMonths","content":"#\n\ngetMonths(start, end): string[]\n\n获取两个日期之间的所有月份\n\nParameters#\n\nNAME    TYPE   DESCRIPTION\nstart   Date   开始时间\nend     Date   结束时间\n\nReturns#\n\nstring[]\n\n * 包含所有月份的数组，格式为'YYYY-M'\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getMonths","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":131}],"domain":"","frontmatter":{},"version":""},{"id":48,"title":"Function: getPixelRatio","content":"#\n\ngetPixelRatio(): number\n\n获取设备像素比(Device Pixel Ratio)\n\nReturns#\n\nnumber\n\n设备像素比，通常为1(普通显示器)或2(Retina等高DPI显示器)\n\nDescription\n\n计算并返回当前设备的实际像素与CSS像素的比例\n\nThrows\n\n当无法创建canvas上下文时抛出错误\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getPixelRatio","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":56}],"domain":"","frontmatter":{},"version":""},{"id":49,"title":"Function: getRandomInt","content":"#\n\ngetRandomInt(min, max): number\n\n获取max与min之间的随机数\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nmin    number   最小值\nmax    number   最大值\n\nReturns#\n\nnumber\n\n随机整数\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getRandomInt","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":51},{"text":"Returns","id":"returns","depth":4,"charIndex":133}],"domain":"","frontmatter":{},"version":""},{"id":50,"title":"Function: getScrollPos","content":"#\n\ngetScrollPos(el?): Object\n\n获取滚动位置\n如果已定义，请使用pageXOffset和pageYOffset，否则使用scrollLeft和scrollTop，可以省略el来使用window的默认值。\n\nParameters#\n\nNAME   TYPE                   DEFAULT VALUE   DESCRIPTION\nel?    HTMLElement | Window   window          目标元素，默认为window\n\nReturns#\n\nObject\n\n滚动位置对象\n\nNAME   TYPE\nx      number\ny      number\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getScrollPos","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":116},{"text":"Returns","id":"returns","depth":4,"charIndex":249}],"domain":"","frontmatter":{},"version":""},{"id":51,"title":"Function: getURLParameters","content":"#\n\ngetURLParameters(url?): Record<string, string>\n\n获取网址参数\n\nParameters#\n\nNAME   TYPE     DEFAULT VALUE          DESCRIPTION\nurl?   string   window.location.href   要解析的URL字符串，默认为当前页面URL\n\nReturns#\n\nRecord<string, string>\n\n返回包含当前URL参数的对象\n\nThrows\n\n当url参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getURLParameters","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":184}],"domain":"","frontmatter":{},"version":""},{"id":52,"title":"Function: getUrlNames","content":"#\n\ngetUrlNames(name): Record<string, string>\n\n根据参数获取对应的值\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nname   string   要获取的参数名\n\nReturns#\n\nRecord<string, string>\n\n返回解析后的参数对象\n\nThrows\n\n当name参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getUrlNames","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":57},{"text":"Returns","id":"returns","depth":4,"charIndex":123}],"domain":"","frontmatter":{},"version":""},{"id":53,"title":"Function: getYearOfDay","content":"#\n\ngetYearOfDay(time): number\n\n获取某年有多少天\n\nParameters#\n\nNAME   TYPE            DESCRIPTION\ntime   string | Date   年份字符串或Date对象\n\nReturns#\n\nnumber\n\n返回该年的天数\n\nSince\n\n1.2.4\n\nThrows\n\n当time参数不是字符串或Date对象时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/getYearOfDay","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":125}],"domain":"","frontmatter":{},"version":""},{"id":54,"title":"Function: handleEmoji","content":"#\n\nhandleEmoji(str?, type?): string\n\n处理emoji，用于把用utf16编码的字符转换成实体字符\n\nParameters#\n\nNAME   TYPE                  DEFAULT VALUE   DESCRIPTION\nstr    string                ''              需要编译/解析的字符串\ntype   \"encode\" | \"decode\"   'encode'        encode 编译 decode 转义\n\nReturns#\n\nstring\n\n编译/解析后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/handleEmoji","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":67},{"text":"Returns","id":"returns","depth":4,"charIndex":260}],"domain":"","frontmatter":{},"version":""},{"id":55,"title":"Function: hasClass","content":"#\n\nhasClass(el, cls): boolean\n\nDom 操作，元素是包含某个 class\n\nParameters#\n\nNAME   TYPE                 DESCRIPTION\nel     null | HTMLElement   HTML元素\ncls    string               css类名\n\nReturns#\n\nboolean\n\nSince\n\n1.1.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/hasClass","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":52},{"text":"Returns","id":"returns","depth":4,"charIndex":175}],"domain":"","frontmatter":{},"version":""},{"id":56,"title":"Function: hexToRgb","content":"#\n\nhexToRgb(hex): Object\n\nHex 转换为 Rgb\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nhex    string   十六进制颜色值\n\nReturns#\n\nObject\n\nRGB颜色对象\n\nNAME   TYPE\nb      number\ng      number\nr      number\n\nSince\n\n1.2.0\n\nExample\n\n","routePath":"/cloud-utils/api/functions/hexToRgb","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":38},{"text":"Returns","id":"returns","depth":4,"charIndex":104}],"domain":"","frontmatter":{},"version":""},{"id":57,"title":"Function: htmlDecode","content":"#\n\nhtmlDecode(str): string\n\nhtml字符解码\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   需要解码的字符串\n\nReturns#\n\nstring\n\n解码后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/htmlDecode","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":37},{"text":"Returns","id":"returns","depth":4,"charIndex":104}],"domain":"","frontmatter":{},"version":""},{"id":58,"title":"Function: htmlEncode","content":"#\n\nhtmlEncode(str): string\n\nhtml字符编码\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   需要编码的字符串\n\nReturns#\n\nstring\n\n编码后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/htmlEncode","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":37},{"text":"Returns","id":"returns","depth":4,"charIndex":104}],"domain":"","frontmatter":{},"version":""},{"id":59,"title":"Function: inAlipay","content":"#\n\ninAlipay(): boolean | undefined\n\n是否是支付宝内核\n\nReturns#\n\nboolean | undefined\n\n是否是支付宝内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inAlipay","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":45}],"domain":"","frontmatter":{},"version":""},{"id":60,"title":"Function: inQQ","content":"#\n\ninQQ(): boolean\n\n是否是QQ客户端webview内核\n\nReturns#\n\nboolean\n\n是否是QQ客户端webview内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inQQ","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":38}],"domain":"","frontmatter":{},"version":""},{"id":61,"title":"Function: inQQBrowser","content":"#\n\ninQQBrowser(): boolean | undefined\n\n是否是QQ浏览器内核\n\nReturns#\n\nboolean | undefined\n\n是否是QQ浏览器内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inQQBrowser","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":50}],"domain":"","frontmatter":{},"version":""},{"id":62,"title":"Function: inUCBrowser","content":"#\n\ninUCBrowser(): boolean | undefined\n\n是否是UC浏览器内核\n\nReturns#\n\nboolean | undefined\n\n是否是UC浏览器内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inUCBrowser","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":50}],"domain":"","frontmatter":{},"version":""},{"id":63,"title":"Function: inWeibo","content":"#\n\ninWeibo(): boolean\n\n是否是微博内核\n\nReturns#\n\nboolean\n\n当前环境是否为微博内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inWeibo","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":31}],"domain":"","frontmatter":{},"version":""},{"id":64,"title":"Function: inWeixin","content":"#\n\ninWeixin(): boolean\n\n是否是微信内核\n\nReturns#\n\nboolean\n\n当前环境是否为微信内核\n\nExample\n\n","routePath":"/cloud-utils/api/functions/inWeixin","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":32}],"domain":"","frontmatter":{},"version":""},{"id":65,"title":"Function: insertAtCaret","content":"#\n\ninsertAtCaret(dom, str?): void\n\n将文本插入到文本区域的光标位置\n\n_应用场景：_如在评论框里，在光标位置里插入emoji等\n\nParameters#\n\nNAME   TYPE                                     DEFAULT VALUE   DESCRIPTION\ndom    HTMLTextAreaElement | HTMLInputElement   undefined       文本区域或输入框DOM对象\nstr    string                                   ''              要插入的文本\n\nReturns#\n\nvoid\n\nExample\n\n","routePath":"/cloud-utils/api/functions/insertAtCaret","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":81},{"text":"Returns","id":"returns","depth":4,"charIndex":320}],"domain":"","frontmatter":{},"version":""},{"id":66,"title":"Function: invertKeyValues","content":"#\n\ninvertKeyValues<T>(obj): Record<string, string>\n\n反转对象的键值对 而不会改变它。使用 Object.keys() 和 Array.reduce() 来反转对象的键值对。\n\nType parameters#\n\nNAME   TYPE\nT      extends Record<string, string | number>\n\nParameters#\n\nNAME   TYPE   DESCRIPTION\nobj    T      需要反转键值对的对象\n\nReturns#\n\nRecord<string, string>\n\n反转键值对后的新对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/invertKeyValues","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":113},{"text":"Parameters","id":"parameters","depth":4,"charIndex":191},{"text":"Returns","id":"returns","depth":4,"charIndex":256}],"domain":"","frontmatter":{},"version":""},{"id":67,"title":"Function: is","content":"#\n\nis(val, type): boolean\n\n判断类型的 is 函数\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\ntype   string    类型字符串\n\nReturns#\n\nboolean\n\n是否为指定类型\n\nExample\n\n","routePath":"/cloud-utils/api/functions/is","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":39},{"text":"Returns","id":"returns","depth":4,"charIndex":128}],"domain":"","frontmatter":{},"version":""},{"id":68,"title":"Function: isArray","content":"#\n\nisArray(val): boolean\n\n判断是否为数组\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为数组\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isArray","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":34},{"text":"Returns","id":"returns","depth":4,"charIndex":100}],"domain":"","frontmatter":{},"version":""},{"id":69,"title":"Function: isBoolean","content":"#\n\nisBoolean(val): boolean\n\n判断是否为 Boolean\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为布尔值\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isBoolean","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":108}],"domain":"","frontmatter":{},"version":""},{"id":70,"title":"Function: isCardId","content":"#\n\nisCardId(val): boolean\n\n是否为有效的身份证号,支持1/2代(15位/18位数字)\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的身份证号字符串\n\nReturns#\n\nboolean\n\n是否为有效的身份证号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isCardId","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":56},{"text":"Returns","id":"returns","depth":4,"charIndex":127}],"domain":"","frontmatter":{},"version":""},{"id":71,"title":"Function: isChinese","content":"#\n\nisChinese(str): boolean\n\n是否为中文\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   需要检查的字符串\n\nReturns#\n\nboolean\n\n是否为中文字符串\n\nSince\n\n1.4.7\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isChinese","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":34},{"text":"Returns","id":"returns","depth":4,"charIndex":101}],"domain":"","frontmatter":{},"version":""},{"id":72,"title":"Function: isClient","content":"#\n\nisClient(): boolean\n\n是否为客户端环境\n\nReturns#\n\nboolean","routePath":"/cloud-utils/api/functions/isClient","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":33}],"domain":"","frontmatter":{},"version":""},{"id":73,"title":"Function: isDate","content":"#\n\nisDate(val): boolean\n\n判断是否为 Date\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为日期对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isDate","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":36},{"text":"Returns","id":"returns","depth":4,"charIndex":102}],"domain":"","frontmatter":{},"version":""},{"id":74,"title":"Function: isDef","content":"#\n\nisDef(val): boolean\n\n判断是否为 undefined\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否已定义\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isDef","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":106}],"domain":"","frontmatter":{},"version":""},{"id":75,"title":"Function: isDigit","content":"#\n\nisDigit(val): boolean\n\n判断字符串是否为数字（包括整数和小数） 支持正数和负数，支持小数点\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   要检查的字符串\n\nReturns#\n\nboolean\n\n是否为数字\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isDigit","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":60},{"text":"Returns","id":"returns","depth":4,"charIndex":126}],"domain":"","frontmatter":{},"version":""},{"id":76,"title":"Function: isElement","content":"#\n\nisElement(val): boolean\n\n判断是否为 Element 元素\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为 DOM 元素\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isElement","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":111}],"domain":"","frontmatter":{},"version":""},{"id":77,"title":"Function: isEmoji","content":"#\n\nisEmoji(value): boolean\n\n检查字符串是否包含 emoji 表情 支持 Unicode 6.0 及以上版本的 emoji 表情\n\nParameters#\n\nNAME    TYPE     DESCRIPTION\nvalue   string   要检查的字符串\n\nReturns#\n\nboolean\n\n是否包含 emoji 表情\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isEmoji","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":78},{"text":"Returns","id":"returns","depth":4,"charIndex":146}],"domain":"","frontmatter":{},"version":""},{"id":78,"title":"Function: isEmpty","content":"#\n\nisEmpty(val): boolean\n\n判断值是否为空 如果值是空对象、空集合、空字符串、空数组或任何不被视为集合的类型，则返回 true。\n\nhttps://30secondsofcode.org/type#isempty\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要检查的值\n\nReturns#\n\nboolean\n\n是否为空\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isEmpty","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":119},{"text":"Returns","id":"returns","depth":4,"charIndex":185}],"domain":"","frontmatter":{},"version":""},{"id":79,"title":"Function: isEmptyObject","content":"#\n\nisEmptyObject(val): boolean\n\n判断值是否为空对象 检查一个值是否为对象类型且没有任何可枚举的属性\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要检查的值\n\nReturns#\n\nboolean\n\n是否为空对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isEmptyObject","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":66},{"text":"Returns","id":"returns","depth":4,"charIndex":132}],"domain":"","frontmatter":{},"version":""},{"id":80,"title":"Function: isFunction","content":"#\n\nisFunction(val): boolean\n\n判断是否为函数\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为函数\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isFunction","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":37},{"text":"Returns","id":"returns","depth":4,"charIndex":103}],"domain":"","frontmatter":{},"version":""},{"id":81,"title":"Function: isHTML","content":"#\n\nisHTML(str): boolean\n\n是否为 HTML 标签\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nstr    string   需要检查的字符串\n\nReturns#\n\nboolean\n\n是否为HTML标签\n\nSince\n\n1.2.4\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isHTML","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":37},{"text":"Returns","id":"returns","depth":4,"charIndex":104}],"domain":"","frontmatter":{},"version":""},{"id":82,"title":"Function: isLeapYear","content":"#\n\nisLeapYear(val): boolean\n\n是否为闰年\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    number   需要检查的年份\n\nReturns#\n\nboolean\n\n是否为闰年\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isLeapYear","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":35},{"text":"Returns","id":"returns","depth":4,"charIndex":101}],"domain":"","frontmatter":{},"version":""},{"id":83,"title":"Function: isLetters","content":"#\n\nisLetters(val): boolean\n\n判断字符串是否只包含字母（不区分大小写） 支持大小写字母，但不支持空格、数字或特殊字符\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   要检查的字符串\n\nReturns#\n\nboolean\n\n是否只包含字母\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isLetters","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":72},{"text":"Returns","id":"returns","depth":4,"charIndex":138}],"domain":"","frontmatter":{},"version":""},{"id":84,"title":"Function: isLicenseNo","content":"#\n\nisLicenseNo(val): boolean\n\n是否为有效的车牌号码\n\n1.常规车牌号：仅允许以汉字开头，后面可录入六个字符，由大写英文字母和阿拉伯数字组成。如：粤B12345；\n2.武警车牌：允许前两位为大写英文字母，后面可录入七个字符，由大写英文字母和阿拉伯数字组成，其中第三位可录汉字也可录大写英文字母及阿拉伯数字，如：WJ01警00\n81、WJ0112345。\n3.最后一个为汉字的车牌：允许以汉字开头，后面可录入六个字符，前五位字符，由大写英文字母和阿拉伯数字组成，而最后一个字符为汉字，汉字包括“挂”、“学”、“警”、\n“军”、“港”、“澳”。如：粤Z1234港。 4.新军车牌：以两位为大写英文字母开头，后面以5位阿拉伯数字组成。如：BA12345。\n5.黑龙江车牌存在08或38开头的情况。\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要检查的车牌号码\n\nReturns#\n\nboolean\n\n是否为有效的车牌号码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isLicenseNo","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":360},{"text":"Returns","id":"returns","depth":4,"charIndex":428}],"domain":"","frontmatter":{},"version":""},{"id":85,"title":"Function: isLightOS","content":"#\n\nisLightOS(): boolean\n\n是否为 Light OS(容器)\n\nReturns#\n\nboolean\n\n是否为Light OS\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isLightOS","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":42}],"domain":"","frontmatter":{},"version":""},{"id":86,"title":"Function: isMap","content":"#\n\nisMap(val): boolean\n\n判断是否为 Map\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为 Map 对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isMap","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":34},{"text":"Returns","id":"returns","depth":4,"charIndex":100}],"domain":"","frontmatter":{},"version":""},{"id":87,"title":"Function: isMobile","content":"#\n\nisMobile(val): boolean\n\n是否为有效的手机号，中国手机号(宽松), 只要是13,14,15,16,17,18,19开头即可\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要检查的手机号码\n\nReturns#\n\nboolean\n\n是否为有效的手机号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isMobile","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":76},{"text":"Returns","id":"returns","depth":4,"charIndex":144}],"domain":"","frontmatter":{},"version":""},{"id":88,"title":"Function: isMobileLoose","content":"#\n\nisMobileLoose(val): boolean\n\n是否为有效的手机号，中国手机号(最宽松), 只要是1开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要检查的手机号码\n\nReturns#\n\nboolean\n\n是否为有效的手机号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isMobileLoose","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":90},{"text":"Returns","id":"returns","depth":4,"charIndex":158}],"domain":"","frontmatter":{},"version":""},{"id":89,"title":"Function: isMobileStrict","content":"#\n\nisMobileStrict(val): boolean\n\n是否为有效的手机号，中国手机号(严谨), 根据工信部2019年最新公布的手机号段\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   要验证的手机号字符串\n\nReturns#\n\nboolean\n\n返回是否为有效的手机号\n\nThrows\n\n当val参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isMobileStrict","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":74},{"text":"Returns","id":"returns","depth":4,"charIndex":143}],"domain":"","frontmatter":{},"version":""},{"id":90,"title":"Function: isNewEnergyLicenseNo","content":"#\n\nisNewEnergyLicenseNo(val): boolean\n\n是否为有效的新能源车牌号\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   要验证的车牌号字符串\n\nReturns#\n\nboolean\n\n返回是否为有效的新能源车牌号\n\nThrows\n\n当val参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isNewEnergyLicenseNo","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":52},{"text":"Returns","id":"returns","depth":4,"charIndex":121}],"domain":"","frontmatter":{},"version":""},{"id":91,"title":"Function: isNull","content":"#\n\nisNull(val): boolean\n\n判断是否为空值\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为空值\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isNull","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":33},{"text":"Returns","id":"returns","depth":4,"charIndex":99}],"domain":"","frontmatter":{},"version":""},{"id":92,"title":"Function: isNullAndUnDef","content":"#\n\nisNullAndUnDef(val): boolean\n\n判断是否为空值且未定义\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为空值且未定义\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isNullAndUnDef","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":111}],"domain":"","frontmatter":{},"version":""},{"id":93,"title":"Function: isNullOrUnDef","content":"#\n\nisNullOrUnDef(val): boolean\n\n判断是否为空值或未定义\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为空值或未定义\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isNullOrUnDef","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":44},{"text":"Returns","id":"returns","depth":4,"charIndex":110}],"domain":"","frontmatter":{},"version":""},{"id":94,"title":"Function: isNumber","content":"#\n\nisNumber(val): boolean\n\n判断是否为数字\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为数字\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isNumber","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":35},{"text":"Returns","id":"returns","depth":4,"charIndex":101}],"domain":"","frontmatter":{},"version":""},{"id":95,"title":"Function: isObject","content":"#\n\nisObject(val): boolean\n\n判断是否为 object\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isObject","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":106}],"domain":"","frontmatter":{},"version":""},{"id":96,"title":"Function: isPhoneX","content":"#\n\nisPhoneX(): boolean\n\n判断 iPhone X Series 机型，刘海屏\n\nReturns#\n\nboolean\n\n是否为iPhone X系列机型\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isPhoneX","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":50}],"domain":"","frontmatter":{},"version":""},{"id":97,"title":"Function: isPromise","content":"#\n\nisPromise(val): boolean\n\n判断是否为 Promise\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为 Promise\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isPromise","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":108}],"domain":"","frontmatter":{},"version":""},{"id":98,"title":"Function: isRegExp","content":"#\n\nisRegExp(val): boolean\n\n判断是否为正则\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为正则表达式\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isRegExp","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":35},{"text":"Returns","id":"returns","depth":4,"charIndex":101}],"domain":"","frontmatter":{},"version":""},{"id":99,"title":"Function: isServer","content":"#\n\nisServer(): boolean\n\n是否为服务端环境\n\nReturns#\n\nboolean","routePath":"/cloud-utils/api/functions/isServer","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":33}],"domain":"","frontmatter":{},"version":""},{"id":100,"title":"Function: isSpecialChar","content":"#\n\nisSpecialChar(value): boolean\n\n检查是否为特殊字符\n\nParameters#\n\nNAME    TYPE     DESCRIPTION\nvalue   string   需要检查的字符串\n\nReturns#\n\nboolean\n\n是否为特殊字符\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isSpecialChar","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":44},{"text":"Returns","id":"returns","depth":4,"charIndex":113}],"domain":"","frontmatter":{},"version":""},{"id":101,"title":"Function: isString","content":"#\n\nisString(val): boolean\n\n判断是否为字符串\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isString","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":36},{"text":"Returns","id":"returns","depth":4,"charIndex":102}],"domain":"","frontmatter":{},"version":""},{"id":102,"title":"Function: isUnDef","content":"#\n\nisUnDef(val): boolean\n\n判断值未定义\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否未定义\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isUnDef","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":33},{"text":"Returns","id":"returns","depth":4,"charIndex":99}],"domain":"","frontmatter":{},"version":""},{"id":103,"title":"Function: isUnifiedSocialCreditCode","content":"#\n\nisUnifiedSocialCreditCode(val): boolean\n\n是否为有效的统一社会信用代码\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的统一社会信用代码\n\nReturns#\n\nboolean\n\n是否为有效的统一社会信用代码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isUnifiedSocialCreditCode","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":59},{"text":"Returns","id":"returns","depth":4,"charIndex":130}],"domain":"","frontmatter":{},"version":""},{"id":104,"title":"Function: isValidAShareCode","content":"#\n\nisValidAShareCode(val): boolean\n\n是否为有效的A股代码\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidAShareCode","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":47},{"text":"Returns","id":"returns","depth":4,"charIndex":87}],"domain":"","frontmatter":{},"version":""},{"id":105,"title":"Function: isValidBankNo","content":"#\n\nisValidBankNo(val): boolean\n\n是否为有效的银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidBankNo","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":69},{"text":"Returns","id":"returns","depth":4,"charIndex":109}],"domain":"","frontmatter":{},"version":""},{"id":106,"title":"Function: isValidBase64Format","content":"#\n\nisValidBase64Format(val): boolean\n\n是否为有效的 base64格式\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidBase64Format","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":54},{"text":"Returns","id":"returns","depth":4,"charIndex":94}],"domain":"","frontmatter":{},"version":""},{"id":107,"title":"Function: isValidChineseName","content":"#\n\nisValidChineseName(val): boolean\n\n是否为有效的中文姓名\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidChineseName","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":88}],"domain":"","frontmatter":{},"version":""},{"id":108,"title":"Function: isValidChineseTelephone","content":"#\n\nisValidChineseTelephone(val): boolean\n\n是否为有效的国内座机电话\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidChineseTelephone","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":95}],"domain":"","frontmatter":{},"version":""},{"id":109,"title":"Function: isValidDate","content":"#\n\nisValidDate(val): boolean\n\n是否为有效的日期格式 格式为 yyyy-mm-dd 或 yyyy-mm-dd HH:mm:ss\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的日期字符串\n\nReturns#\n\nboolean\n\n * 返回验证结果\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidDate","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":78},{"text":"Returns","id":"returns","depth":4,"charIndex":147}],"domain":"","frontmatter":{},"version":""},{"id":110,"title":"Function: isValidEd2kLinkLoose","content":"#\n\nisValidEd2kLinkLoose(val): boolean\n\n是否为有效的ed2k链接(宽松匹配)\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的ed2k链接字符串\n\nReturns#\n\nboolean\n\n * 返回验证结果\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidEd2kLinkLoose","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":131}],"domain":"","frontmatter":{},"version":""},{"id":111,"title":"Function: isValidEmail","content":"#\n\nisValidEmail(val): boolean\n\n是否为有效的邮箱地址 名称允许汉字、字母、数字，域名只允许英文域名 中文如：杨元庆001Abc@lenovo.com.cn\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的邮箱字符串\n\nReturns#\n\nboolean\n\n * 返回验证结果\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidEmail","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":93},{"text":"Returns","id":"returns","depth":4,"charIndex":162}],"domain":"","frontmatter":{},"version":""},{"id":112,"title":"Function: isValidEnglishName","content":"#\n\nisValidEnglishName(val): boolean\n\n是否为有效的英文姓名\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的英文姓名\n\nReturns#\n\nboolean\n\n * 返回验证结果\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidEnglishName","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":116}],"domain":"","frontmatter":{},"version":""},{"id":113,"title":"Function: isValidHexadecimalColor","content":"#\n\nisValidHexadecimalColor(val): boolean\n\n是否为有效的16进制颜色\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的颜色字符串\n\nReturns#\n\nboolean\n\n * 返回验证结果\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidHexadecimalColor","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":124}],"domain":"","frontmatter":{},"version":""},{"id":114,"title":"Function: isValidIPV4","content":"#\n\nisValidIPV4(val): boolean\n\n是否为有效的IP v4\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidIPV4","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":82}],"domain":"","frontmatter":{},"version":""},{"id":115,"title":"Function: isValidIPV6","content":"#\n\nisValidIPV6(val): boolean\n\n是否为有效的IP v6\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidIPV6","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":82}],"domain":"","frontmatter":{},"version":""},{"id":116,"title":"Function: isValidImageLink","content":"#\n\nisValidImageLink(val): boolean\n\n是否为有效的图片链接地址（图片格式可按需增删）\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidImageLink","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":59},{"text":"Returns","id":"returns","depth":4,"charIndex":99}],"domain":"","frontmatter":{},"version":""},{"id":117,"title":"Function: isValidMD5","content":"#\n\nisValidMD5(val): boolean\n\n是否为有效的md5格式(32位)\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidMD5","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":86}],"domain":"","frontmatter":{},"version":""},{"id":118,"title":"Function: isValidMagnetLinkLoose","content":"#\n\nisValidMagnetLinkLoose(val): boolean\n\n是否为有效的磁力链接(宽松匹配)\n\nParameters#\n\nNAME   TYPE\nval    string\n\nReturns#\n\nboolean\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidMagnetLinkLoose","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":98}],"domain":"","frontmatter":{},"version":""},{"id":119,"title":"Function: isValidPassport","content":"#\n\nisValidPassport(val): boolean\n\n是否为有效的护照（包含香港、澳门）\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的护照号码\n\nReturns#\n\nboolean\n\n是否为有效的护照\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidPassport","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":52},{"text":"Returns","id":"returns","depth":4,"charIndex":120}],"domain":"","frontmatter":{},"version":""},{"id":120,"title":"Function: isValidPassword","content":"#\n\nisValidPassword(val, minLength?): boolean\n\n是否为有效的密码强度，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n\nParameters#\n\nNAME         TYPE     DEFAULT VALUE   DESCRIPTION\nval          string   undefined       需要验证的密码字符串\nminLength?   number   6               密码最小长度，默认为6\n\nReturns#\n\nboolean\n\n是否为有效的密码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidPassword","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":92},{"text":"Returns","id":"returns","depth":4,"charIndex":255}],"domain":"","frontmatter":{},"version":""},{"id":121,"title":"Function: isValidQQ","content":"#\n\nisValidQQ(val): boolean\n\n是否为有效的 qq\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的QQ号码\n\nReturns#\n\nboolean\n\n是否为有效的QQ\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidQQ","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":38},{"text":"Returns","id":"returns","depth":4,"charIndex":106}],"domain":"","frontmatter":{},"version":""},{"id":122,"title":"Function: isValidSemverVersion","content":"#\n\nisValidSemverVersion(val): boolean\n\n版本号格式必须为X.Y.Z\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的版本号字符串\n\nReturns#\n\nboolean\n\n是否为有效的语义化版本号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidSemverVersion","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":53},{"text":"Returns","id":"returns","depth":4,"charIndex":123}],"domain":"","frontmatter":{},"version":""},{"id":123,"title":"Function: isValidSubnetMask","content":"#\n\nisValidSubnetMask(val): boolean\n\n是否为有效的子网掩码\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   需要验证的子网掩码字符串\n\nReturns#\n\nboolean\n\n是否为有效的子网掩码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidSubnetMask","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":47},{"text":"Returns","id":"returns","depth":4,"charIndex":118}],"domain":"","frontmatter":{},"version":""},{"id":124,"title":"Function: isValidTelephone","content":"#\n\nisValidTelephone(val): boolean\n\n是否为有效的电话(座机)\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的电话号码字符串\n\nReturns#\n\nboolean\n\n返回布尔值，表示是否为有效的电话号码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidTelephone","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":118}],"domain":"","frontmatter":{},"version":""},{"id":125,"title":"Function: isValidTestScores","content":"#\n\nisValidTestScores(val): boolean\n\n是否为有效的考卷分数\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的分数字符串\n\nReturns#\n\nboolean\n\n返回布尔值，表示是否为有效的考卷分数\n\nDescription\n\n大于等于0, 小于等于150, 支持小数位出现5, 如145.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidTestScores","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":47},{"text":"Returns","id":"returns","depth":4,"charIndex":115}],"domain":"","frontmatter":{},"version":""},{"id":126,"title":"Function: isValidThunder","content":"#\n\nisValidThunder(val): boolean\n\n是否为有效的迅雷链接\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的迅雷链接字符串\n\nReturns#\n\nboolean\n\n返回布尔值，表示是否为有效的迅雷链接\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidThunder","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":44},{"text":"Returns","id":"returns","depth":4,"charIndex":114}],"domain":"","frontmatter":{},"version":""},{"id":127,"title":"Function: isValidURI","content":"#\n\nisValidURI(url): boolean\n\n是否为有效的 url\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nurl    string   待验证的URL字符串\n\nReturns#\n\nboolean\n\n返回布尔值，表示是否为有效的URL\n\nDescription\n\n支持多种协议类型包括http、ftp、git、irc等\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidURI","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":109}],"domain":"","frontmatter":{},"version":""},{"id":128,"title":"Function: isValidUserName","content":"#\n\nisValidUserName(val, minLength?, maxLength?): boolean\n\n是否为有效的用户名\n\nParameters#\n\nNAME        TYPE     DEFAULT VALUE   DESCRIPTION\nval         string   undefined       待验证的用户名字符串\nminLength   number   4               最小长度，默认为4\nmaxLength   number   16              最大长度，默认为16\n\nReturns#\n\nboolean\n\n返回布尔值，表示是否为有效的用户名\n\nDescription\n\n4到16位（字母，数字，下划线，减号）\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidUserName","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":68},{"text":"Returns","id":"returns","depth":4,"charIndex":274}],"domain":"","frontmatter":{},"version":""},{"id":129,"title":"Function: isValidVideoLink","content":"#\n\nisValidVideoLink(val): boolean\n\n是否为有效的视频链接地址（视频格式可按需增删）\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的视频链接\n\nReturns#\n\nboolean\n\n是否为有效的视频链接\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidVideoLink","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":59},{"text":"Returns","id":"returns","depth":4,"charIndex":126}],"domain":"","frontmatter":{},"version":""},{"id":130,"title":"Function: isValidWechatID","content":"#\n\nisValidWechatID(val): boolean\n\n是否为有效的微信号 6至20位，以字母开头，字母，数字，减号，下划线\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的微信号\n\nReturns#\n\nboolean\n\n是否为有效的微信号\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidWechatID","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":69},{"text":"Returns","id":"returns","depth":4,"charIndex":135}],"domain":"","frontmatter":{},"version":""},{"id":131,"title":"Function: isValidZipcode","content":"#\n\nisValidZipcode(val): boolean\n\n是否为有效的中国邮政编码\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nval    string   待验证的邮政编码\n\nReturns#\n\nboolean\n\n是否为有效的中国邮政编码\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isValidZipcode","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":113}],"domain":"","frontmatter":{},"version":""},{"id":132,"title":"Function: isWindow","content":"#\n\nisWindow(val): boolean\n\n判断是否为 window\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   要判断的值\n\nReturns#\n\nboolean\n\n是否为 window 对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/isWindow","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":106}],"domain":"","frontmatter":{},"version":""},{"id":133,"title":"Function: last","content":"#\n\nlast<T>(array): T | undefined\n\n获取数组的最后一项\n\nType parameters#\n\nNAME\nT\n\nParameters#\n\nNAME    TYPE   DESCRIPTION\narray   T[]    输入数组\n\nReturns#\n\nT | undefined\n\n数组的最后一项或undefined\n\nExample\n\n","routePath":"/cloud-utils/api/functions/last","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":44},{"text":"Parameters","id":"parameters","depth":4,"charIndex":70},{"text":"Returns","id":"returns","depth":4,"charIndex":131}],"domain":"","frontmatter":{},"version":""},{"id":134,"title":"Function: mapKeys","content":"#\n\nmapKeys<T, K>(obj, fn): Record<K, any>\n\n根据提供函数生成的键生成一个新对象 使用 Object.keys(obj) 来迭代对象的键。 使用 Array.reduce()\n创建一个具有相同值的新对象，并使用 fn 来映射键。\n\nType parameters#\n\nNAME   TYPE\nT      extends Record<string, any>\nK      extends string\n\nParameters#\n\nNAME   TYPE                                     DESCRIPTION\nobj    T                                        原始对象\nfn     (value: any, key: string, obj: T) => K   生成新键的函数\n\nReturns#\n\nRecord<K, any>\n\n新生成的对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/mapKeys","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":135},{"text":"Parameters","id":"parameters","depth":4,"charIndex":223},{"text":"Returns","id":"returns","depth":4,"charIndex":406}],"domain":"","frontmatter":{},"version":""},{"id":135,"title":"Function: mapValues","content":"#\n\nmapValues<T, R>(obj, fn): Record<string, R>\n\n根据提供函数返回的值映射一个新对象\n\nType parameters#\n\nNAME   DESCRIPTION\nT      原始对象值类型\nR      映射后的值类型\n\nParameters#\n\nNAME   TYPE                                                   DESCRIPTION\nobj    Record<string, T>                                      要映射的对象\nfn     (value: T, key: string, obj: Record<string, T>) => R   映射函数\n\nReturns#\n\nRecord<string, R>\n\n映射后的新对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/mapValues","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":66},{"text":"Parameters","id":"parameters","depth":4,"charIndex":134},{"text":"Returns","id":"returns","depth":4,"charIndex":358}],"domain":"","frontmatter":{},"version":""},{"id":136,"title":"Function: mathAdd","content":"#\n\nmathAdd(arg1, arg2, precision?): number\n\n精确加法\n\nParameters#\n\nNAME         TYPE              DEFAULT VALUE   DESCRIPTION\narg1         string | number   undefined       第一个数\narg2         string | number   undefined       第二个数\nprecision?   number            10              精度，默认保留10位小数\n\nReturns#\n\nnumber\n\n和","routePath":"/cloud-utils/api/functions/mathAdd","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":49},{"text":"Returns","id":"returns","depth":4,"charIndex":286}],"domain":"","frontmatter":{},"version":""},{"id":137,"title":"Function: mathDivide","content":"#\n\nmathDivide(arg1, arg2, precision?): number\n\n精确除法函数\n\nParameters#\n\nNAME         TYPE              DEFAULT VALUE   DESCRIPTION\narg1         string | number   undefined       被除数\narg2         string | number   undefined       除数\nprecision?   number            10              精度，默认保留10位小数\n\nReturns#\n\nnumber\n\n商\n\nThrows\n\n当除数为0时抛出错误","routePath":"/cloud-utils/api/functions/mathDivide","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":54},{"text":"Returns","id":"returns","depth":4,"charIndex":288}],"domain":"","frontmatter":{},"version":""},{"id":138,"title":"Function: mathMultiply","content":"#\n\nmathMultiply(arg1, arg2, precision?): number\n\n精确乘法\n\nParameters#\n\nNAME         TYPE              DEFAULT VALUE   DESCRIPTION\narg1         string | number   undefined       第一个数\narg2         string | number   undefined       第二个数\nprecision?   number            10              精度，默认保留10位小数\n\nReturns#\n\nnumber\n\n积","routePath":"/cloud-utils/api/functions/mathMultiply","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":54},{"text":"Returns","id":"returns","depth":4,"charIndex":291}],"domain":"","frontmatter":{},"version":""},{"id":139,"title":"Function: mathSubtract","content":"#\n\nmathSubtract(arg1, arg2, precision?): number\n\n精确减法\n\nParameters#\n\nNAME         TYPE              DEFAULT VALUE   DESCRIPTION\narg1         string | number   undefined       被减数\narg2         string | number   undefined       减数\nprecision?   number            10              精度，默认保留10位小数\n\nReturns#\n\nnumber\n\n差","routePath":"/cloud-utils/api/functions/mathSubtract","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":54},{"text":"Returns","id":"returns","depth":4,"charIndex":288}],"domain":"","frontmatter":{},"version":""},{"id":140,"title":"Function: merge","content":"#\n\nmerge<T>(...objs): Record<string, T[]>\n\n深度合并多个对象\n\nType parameters#\n\nNAME   DESCRIPTION\nT      对象值的类型\n\nParameters#\n\nNAME      TYPE                  DESCRIPTION\n...objs   Record<string, T>[]   要合并的对象数组\n\nReturns#\n\nRecord<string, T[]>\n\n合并后的新对象\n\nDescription\n\n将多个对象的属性深度合并，数组属性会被展开合并，非数组属性会被转换为数组\n\nThrows\n\n当输入参数不是对象时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/merge","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":52},{"text":"Parameters","id":"parameters","depth":4,"charIndex":104},{"text":"Returns","id":"returns","depth":4,"charIndex":203}],"domain":"","frontmatter":{},"version":""},{"id":141,"title":"Function: numberToChinese","content":"#\n\nnumberToChinese(num): string\n\n数字转换成中文的大写数字\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nnum    number   要转换的数字\n\nReturns#\n\nstring\n\n中文大写数字\n\nSince\n\n1.2.5\n\nExample\n\n","routePath":"/cloud-utils/api/functions/numberToChinese","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":111}],"domain":"","frontmatter":{},"version":""},{"id":142,"title":"Function: objectFromPairs","content":"#\n\nobjectFromPairs<T>(array): Object\n\n数组转换为键值对的对象\n\nType parameters#\n\nNAME\nT\n\nParameters#\n\nNAME    TYPE            DESCRIPTION\narray   [string, T][]   包含键值对数组的数组\n\nReturns#\n\nObject\n\n转换后的对象\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/objectFromPairs","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":50},{"text":"Parameters","id":"parameters","depth":4,"charIndex":76},{"text":"Returns","id":"returns","depth":4,"charIndex":161}],"domain":"","frontmatter":{},"version":""},{"id":143,"title":"Function: objectToPairs","content":"#\n\nobjectToPairs<T>(obj): [string, T][]\n\n对象转化为键值对 使用 Object.keys() 和 Array.map() 遍历对象的键并生成一个包含键值对的数组。\n\nType parameters#\n\nNAME\nT\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nobj    Object   需要转换的对象\n\nReturns#\n\n[string, T][]\n\n包含键值对的数组\n\nExample\n\n","routePath":"/cloud-utils/api/functions/objectToPairs","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":102},{"text":"Parameters","id":"parameters","depth":4,"charIndex":128},{"text":"Returns","id":"returns","depth":4,"charIndex":194}],"domain":"","frontmatter":{},"version":""},{"id":144,"title":"Function: only","content":"#\n\nonly<T, K>(obj, keys): Pick<T, K>\n\n返回对象的白名单属性\n\nhttps://github.com/tj/node-only\n\nType parameters#\n\nNAME   TYPE                               DESCRIPTION\nT      extends object                     对象类型\nK      extends string | number | symbol   键类型\n\nParameters#\n\nNAME   TYPE           DESCRIPTION\nobj    T              源对象\nkeys   string | K[]   白名单键，可以是空格分隔的字符串或数组\n\nReturns#\n\nPick<T, K>\n\n * 只包含白名单属性的新对象\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/only","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":82},{"text":"Parameters","id":"parameters","depth":4,"charIndex":248},{"text":"Returns","id":"returns","depth":4,"charIndex":364}],"domain":"","frontmatter":{},"version":""},{"id":145,"title":"Function: photoCompress","content":"#\n\nphotoCompress(file, obj?, cb?): void\n\n图片压缩工具\n\nParameters#\n\nNAME           TYPE                                                           DESCRIPTION\nfile           File                                                           需要压缩的图片文件\nobj            Object                                                         压缩参数配置\nobj.blob?      boolean                                                        是否输出Blob格式\nobj.height?    number                                                         压缩后图片高度（保持比例）\nobj.quality?   number                                                         图片质量（0-1之间）\nobj.width?     number                                                         压缩后图片宽度（保持比例）\ncb?            (compressed: string | Blob, original: string | Blob) => void   压缩完成回调函数\n\nReturns#\n\nvoid\n\nDescription\n\n通过Canvas API实现图片压缩，支持调整尺寸、质量和输出格式\n\nThrows\n\n当输入参数类型不正确时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/photoCompress","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":48},{"text":"Returns","id":"returns","depth":4,"charIndex":775}],"domain":"","frontmatter":{},"version":""},{"id":146,"title":"Function: preZeroFill","content":"#\n\npreZeroFill(num, size): string\n\n对整数进行前置补0\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nnum    number   需要补零的数值\nsize   number   补零后的总位数\n\nReturns#\n\nstring\n\n补零后的字符串\n\nDescription\n\n将数字转换为指定位数的字符串，不足位数时在前面补0\n\nThrows\n\n当输入参数不是数字时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/preZeroFill","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":135}],"domain":"","frontmatter":{},"version":""},{"id":147,"title":"Function: prettyBytes","content":"#\n\nprettyBytes(num, precision?, addSpace?): string\n\n将字节数转换为易读的格式（如 KB、MB、GB）\n\nParameters#\n\nNAME         TYPE      DEFAULT VALUE   DESCRIPTION\nnum          number    undefined       要转换的字节数（可正可负）\nprecision?   number    3               显示精度（有效数字位数），默认为3\naddSpace?    boolean   true            是否在数字和单位间添加空格，默认为true\n\nReturns#\n\nstring\n\n格式化后的字符串\n\nDescription\n\n将字节数转换为带单位的友好显示格式，支持自定义精度和间距\n\nThrows\n\n当输入参数不是数字时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/prettyBytes","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":77},{"text":"Returns","id":"returns","depth":4,"charIndex":313}],"domain":"","frontmatter":{},"version":""},{"id":148,"title":"Function: promisify","content":"#\n\npromisify<T>(func): (...args: any[]) => Promise<T>\n\n将回调风格的函数转换为Promise风格\n\nType parameters#\n\nNAME   TYPE   DESCRIPTION\nT      any    函数返回结果的类型\n\nParameters#\n\nNAME   TYPE                       DESCRIPTION\nfunc   (...args: any[]) => void   需要转换的回调风格函数\n\nReturns#\n\nfn\n\n返回一个返回Promise的新函数\n\n(...args): Promise<T>\n\nParameters#\n\nNAME      TYPE\n...args   any[]\n\nReturns#\n\nPromise<T>\n\nDescription\n\n将遵循Node.js回调风格(err, result)的函数转换为返回Promise的函数\n\nThrows\n\n当输入参数不是函数时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/promisify","lang":"","toc":[{"text":"Type parameters","id":"type-parameters","depth":4,"charIndex":76},{"text":"Parameters","id":"parameters","depth":4,"charIndex":145},{"text":"Returns","id":"returns","depth":4,"charIndex":251}],"domain":"","frontmatter":{},"version":""},{"id":149,"title":"Function: removeClass","content":"#\n\nremoveClass(el, cls): void\n\nDOM操作 - 移除元素的一个或多个class\n\nParameters#\n\nNAME   TYPE                 DESCRIPTION\nel     null | HTMLElement   目标DOM元素\ncls    string               要移除的CSS类名，多个类名用空格分隔\n\nReturns#\n\nvoid\n\nDescription\n\n从指定DOM元素中移除一个或多个CSS类名，兼容不支持classList的旧浏览器\n\nSince\n\n1.1.5\n\nThrows\n\n当el参数不是HTMLElement时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/removeClass","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":55},{"text":"Returns","id":"returns","depth":4,"charIndex":193}],"domain":"","frontmatter":{},"version":""},{"id":150,"title":"Function: removeCookie","content":"#\n\nremoveCookie(name, domain?, path?): boolean\n\n删除指定 cookie\n\nParameters#\n\nNAME      TYPE     DEFAULT VALUE   DESCRIPTION\nname      string   undefined       cookie名称\ndomain?   string   undefined       可选域名\npath?     string   '/'             可选路径，默认为'/'\n\nReturns#\n\nboolean\n\n * 是否删除成功\n\nExample\n\n","routePath":"/cloud-utils/api/functions/removeCookie","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":60},{"text":"Returns","id":"returns","depth":4,"charIndex":252}],"domain":"","frontmatter":{},"version":""},{"id":151,"title":"Function: rgbToHex","content":"#\n\nrgbToHex(r, g, b): string\n\nRGB 转换为 Hex\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nr      number   红色值 (0-255)\ng      number   绿色值 (0-255)\nb      number   蓝色值 (0-255)\n\nReturns#\n\nstring\n\n十六进制颜色值 (如 #000000)\n\nDescription\n\n将RGB颜色值转换为十六进制格式\n\nSince\n\n1.2.0\n\nThrows\n\n当输入参数不是数字时抛出\n\nThrows\n\n当RGB值不在0-255范围内时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/rgbToHex","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":42},{"text":"Returns","id":"returns","depth":4,"charIndex":168}],"domain":"","frontmatter":{},"version":""},{"id":152,"title":"Function: scrollToTop","content":"#\n\nscrollToTop(): void\n\n滚动到顶部\n使用document.documentElement.scrollTop或document.body.scrollTop获取到顶部的距离。从顶部滚动一小部分距离\n。 使用window.requestAnimationFrame（）来滚动。\n\nReturns#\n\nvoid\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/scrollToTop","lang":"","toc":[{"text":"Returns","id":"returns","depth":4,"charIndex":150}],"domain":"","frontmatter":{},"version":""},{"id":153,"title":"Function: setCookie","content":"#\n\nsetCookie(params): boolean\n\n设置 cookie\n\nParameters#\n\nNAME             TYPE                               DESCRIPTION\nparams           Object                             参数对象\nparams.domain?   string                             cookie域名\nparams.minSec?   number                             cookie过期时间（秒）\nparams.name      string                             cookie名称\nparams.path?     string                             cookie路径，默认为'/'\nparams.value     string | Record<string, unknown>   cookie值，可以是字符串或对象\n\nReturns#\n\nboolean\n\n * 是否设置成功\n\nExample\n\n","routePath":"/cloud-utils/api/functions/setCookie","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":41},{"text":"Returns","id":"returns","depth":4,"charIndex":502}],"domain":"","frontmatter":{},"version":""},{"id":154,"title":"Function: setDocumentTitle","content":"#\n\nsetDocumentTitle(title, img?): void\n\n动态设置网页标题（兼容iOS设备）\n\nParameters#\n\nNAME    TYPE     DESCRIPTION\ntitle   string   要设置的标题文本\nimg?    string   iOS设备使用的备用图片URL（base64数据或图片路径）\n\nReturns#\n\nvoid\n\nDescription\n\n设置网页标题并在iOS设备上通过iframe技巧触发标题更新\n\nThrows\n\n当title参数不是字符串时抛出\n\nExample\n\n","routePath":"/cloud-utils/api/functions/setDocumentTitle","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":58},{"text":"Returns","id":"returns","depth":4,"charIndex":175}],"domain":"","frontmatter":{},"version":""},{"id":155,"title":"Function: size","content":"#\n\nsize(val): number\n\n获取数组，对象或字符串的大小。 Get type of val (array, object or string). Use length property\nfor arrays. Use length or size value if available or number of keys for objects.\nUse size of a Blob object created from val for strings.\n\n获取 val （array，object 或 string）的类型。 对于数组使用 length 属性。 对于对象，使用 length 或 size\n如果可用的话，或者对象的键的数量。 对于字符串，使用根据 val 创建的Blob对象 的 size。 通过 split('')\n将字符串拆分成字符数组并返回其长度。\n\nParameters#\n\nNAME   TYPE                      DESCRIPTION\nval    string | object | any[]   要计算大小的值，可以是数组、对象或字符串\n\nReturns#\n\nnumber\n\n返回输入值的大小\n\nExample\n\n\n\nExample\n\n\n\nExample\n\n","routePath":"/cloud-utils/api/functions/size","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":397},{"text":"Returns","id":"returns","depth":4,"charIndex":510}],"domain":"","frontmatter":{},"version":""},{"id":156,"title":"Function: timeTaken","content":"#\n\ntimeTaken(callback): any\n\n测试函数所花费的时间\n\nParameters#\n\nNAME       TYPE       DESCRIPTION\ncallback   Function   要测试执行时间的函数\n\nReturns#\n\nany\n\n返回callback函数的执行结果\n\nSince\n\n1.2.1\n\nExample\n\n","routePath":"/cloud-utils/api/functions/timeTaken","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":40},{"text":"Returns","id":"returns","depth":4,"charIndex":121}],"domain":"","frontmatter":{},"version":""},{"id":157,"title":"Function: toCamelCaseVar","content":"#\n\ntoCamelCaseVar(variable): string\n\n下划线转换小驼峰\n\nParameters#\n\nNAME       TYPE     DESCRIPTION\nvariable   string   需要转换的下划线格式字符串\n\nReturns#\n\nstring\n\n转换后的小驼峰格式字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/toCamelCaseVar","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":126}],"domain":"","frontmatter":{},"version":""},{"id":158,"title":"Function: toNonExponential","content":"#\n\ntoNonExponential(num): string\n\n科学计数法转化为数值字符串形式\n\nParameters#\n\nNAME   TYPE     DESCRIPTION\nnum    number   需要转换的数字\n\nReturns#\n\nstring\n\n转换后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/toNonExponential","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":50},{"text":"Returns","id":"returns","depth":4,"charIndex":116}],"domain":"","frontmatter":{},"version":""},{"id":159,"title":"Function: toNumber","content":"#\n\ntoNumber(val): number | unknown\n\n将输入值转换为数字\n\nParameters#\n\nNAME   TYPE      DESCRIPTION\nval    unknown   需要转换的值\n\nReturns#\n\nnumber | unknown\n\n * 转换后的数字或原始值\n\nExample\n\n","routePath":"/cloud-utils/api/functions/toNumber","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":46},{"text":"Returns","id":"returns","depth":4,"charIndex":113}],"domain":"","frontmatter":{},"version":""},{"id":160,"title":"Function: toUnderlineVar","content":"#\n\ntoUnderlineVar(variable): string\n\n驼峰转换下划线\n\nParameters#\n\nNAME       TYPE     DESCRIPTION\nvariable   string   需要转换的驼峰字符串\n\nReturns#\n\nstring\n\n转换后的下划线字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/toUnderlineVar","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":45},{"text":"Returns","id":"returns","depth":4,"charIndex":122}],"domain":"","frontmatter":{},"version":""},{"id":161,"title":"Function: toZhCN","content":"#\n\ntoZhCN(num): string\n\n将数字或字符串转换为中文大写金额\n\nParameters#\n\nNAME   TYPE              DESCRIPTION\nnum    string | number   需要转换的数字或字符串\n\nReturns#\n\nstring\n\n标准会计格式的中文大写金额字符串\n\nExample\n\n\n\nThrows\n\n当输入数据不符合格式要求时抛出错误","routePath":"/cloud-utils/api/functions/toZhCN","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":41},{"text":"Returns","id":"returns","depth":4,"charIndex":129}],"domain":"","frontmatter":{},"version":""},{"id":162,"title":"Function: transferHumpUnderline","content":"#\n\ntransferHumpUnderline(records, type?, keepOldField?): RecordData\n\n数据对象key驼峰下划线格式相互转化\n\nParameters#\n\nNAME           TYPE           DEFAULT VALUE   DESCRIPTION\nrecords        RecordData     undefined       原始对象，支持数组、key-value对象\ntype           TransferType   'hump'          hump-转驼峰 line-转下划线\nkeepOldField   boolean        false           true-保留原key,并转换 false-直接转下划线\n\nReturns#\n\nRecordData\n\n转换后的对象\n\nExample\n\n","routePath":"/cloud-utils/api/functions/transferHumpUnderline","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":88},{"text":"Returns","id":"returns","depth":4,"charIndex":368}],"domain":"","frontmatter":{},"version":""},{"id":163,"title":"Function: trim","content":"#\n\ntrim(str, type?): string\n\n清除空格\n\nParameters#\n\nNAME   TYPE            DEFAULT VALUE   DESCRIPTION\nstr    string          undefined       需要处理的字符串\ntype   1 | 2 | 3 | 4   1               处理类型：1-所有空格 2-前后空格 3-前空格 4-后空格\n\nReturns#\n\nstring\n\n处理后的字符串\n\nExample\n\n","routePath":"/cloud-utils/api/functions/trim","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":34},{"text":"Returns","id":"returns","depth":4,"charIndex":217}],"domain":"","frontmatter":{},"version":""},{"id":164,"title":"Function: urlJoin","content":"#\n\nurlJoin(...args): string\n\nURLJoin\n\nParameters#\n\nNAME      TYPE       DESCRIPTION\n...args   string[]   URL segments to join\n\nReturns#\n\nstring\n\n * The joined and normalized URL\n\nDescription\n\nJoins all given URL segments together, then normalizes the resulting URL.\n\nUse String.prototype.join('/') to combine URL segments, then a series of\nString.prototype.replace() calls with various regexps to normalize the resulting\nURL (remove double slashes, add proper slashes for protocol, remove slashes\nbefore parameters, combine parameters with '&' and normalize first parameter\ndelimiter).\n\nExample\n\n","routePath":"/cloud-utils/api/functions/urlJoin","lang":"","toc":[{"text":"Parameters","id":"parameters","depth":4,"charIndex":37},{"text":"Returns","id":"returns","depth":4,"charIndex":126}],"domain":"","frontmatter":{},"version":""},{"id":165,"title":"@winner-fed/cloud-utils","content":"#\n\n\nTable of contents#\n\n\nFunctions#\n\n * accAdd\n * accDiv\n * accMod\n * accMul\n * accSub\n * addChineseUnit\n * addClass\n * anagrams\n * appendStockSuffix\n * bytesToSize\n * capitalizeEveryWord\n * changeMoneyToChinese\n * clearCookie\n * combineURLs\n * compareVersion\n * dataURLToBlob\n * deepClone\n * deepMapKeys\n * dig\n * dynamicLoadScript\n * encrypt\n * equals\n * exportXls\n * extend\n * fibonacci\n * filterEmptyPropObj\n * formatBankCard\n * formatDate\n * formatDateToTimeStamp\n * formatMoney\n * formatNumber\n * formatPhone\n * formatTimeAgo\n * generateGUID\n * get\n * getBrowser\n * getCookie\n * getDayOfYear\n * getDayOfYearWeek\n * getDays\n * getDevice\n * getDiffDay\n * getImgBase64\n * getIn\n * getLocationHrefParam\n * getLocationSearchParam\n * getMonthOfDay\n * getMonths\n * getPixelRatio\n * getRandomInt\n * getScrollPos\n * getURLParameters\n * getUrlNames\n * getYearOfDay\n * handleEmoji\n * hasClass\n * hexToRgb\n * htmlDecode\n * htmlEncode\n * inAlipay\n * inQQ\n * inQQBrowser\n * inUCBrowser\n * inWeibo\n * inWeixin\n * insertAtCaret\n * invertKeyValues\n * is\n * isArray\n * isBoolean\n * isCardId\n * isChinese\n * isClient\n * isDate\n * isDef\n * isDigit\n * isElement\n * isEmoji\n * isEmpty\n * isEmptyObject\n * isFunction\n * isHTML\n * isLeapYear\n * isLetters\n * isLicenseNo\n * isLightOS\n * isMap\n * isMobile\n * isMobileLoose\n * isMobileStrict\n * isNewEnergyLicenseNo\n * isNull\n * isNullAndUnDef\n * isNullOrUnDef\n * isNumber\n * isObject\n * isPhoneX\n * isPromise\n * isRegExp\n * isServer\n * isSpecialChar\n * isString\n * isUnDef\n * isUnifiedSocialCreditCode\n * isValidAShareCode\n * isValidBankNo\n * isValidBase64Format\n * isValidChineseName\n * isValidChineseTelephone\n * isValidDate\n * isValidEd2kLinkLoose\n * isValidEmail\n * isValidEnglishName\n * isValidHexadecimalColor\n * isValidIPV4\n * isValidIPV6\n * isValidImageLink\n * isValidMD5\n * isValidMagnetLinkLoose\n * isValidPassport\n * isValidPassword\n * isValidQQ\n * isValidSemverVersion\n * isValidSubnetMask\n * isValidTelephone\n * isValidTestScores\n * isValidThunder\n * isValidURI\n * isValidUserName\n * isValidVideoLink\n * isValidWechatID\n * isValidZipcode\n * isWindow\n * last\n * mapKeys\n * mapValues\n * mathAdd\n * mathDivide\n * mathMultiply\n * mathSubtract\n * merge\n * numberToChinese\n * objectFromPairs\n * objectToPairs\n * only\n * photoCompress\n * preZeroFill\n * prettyBytes\n * promisify\n * removeClass\n * removeCookie\n * rgbToHex\n * scrollToTop\n * setCookie\n * setDocumentTitle\n * size\n * timeTaken\n * toCamelCaseVar\n * toNonExponential\n * toNumber\n * toUnderlineVar\n * toZhCN\n * transferHumpUnderline\n * trim\n * urlJoin","routePath":"/cloud-utils/api/","lang":"","toc":[{"text":"Table of contents","id":"table-of-contents","depth":2,"charIndex":3},{"text":"Functions","id":"functions","depth":3,"charIndex":24}],"domain":"","frontmatter":{},"version":""}]